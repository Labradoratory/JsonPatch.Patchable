# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- develop
- release/*
- hotfix/*
- bugfix/*
- feature/*

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  isHotfix: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/')]
  isRelease: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')]
  publishArtifacts: $[or(variables['isMaster'], variables['isHotfix'], variables['isRelease'])]

steps:

- powershell: |
    Write-Host "isMaster: $(isMaster)"
    Write-Host "isHotfix: $(isHotfix)"
    Write-Host "isRelease: $(isRelease)"
    Write-Host "publishArtifacts: $(publishArtifacts)"

- task: GitVersion@5
  displayName: 'GitVersion'
  inputs:
    runtime: core
    updateAssemblyInfo: true
    preferBundledVersion: false

- script: echo %Action%%BuildVersion%
  displayName: 'Set build version'
  env:
    Action: '##vso[build.updatebuildnumber]'
    BuildVersion: $(GitVersion.SemVer)

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build $(buildConfiguration)'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test $(buildConfiguration)'
  inputs:
    command: 'test'
    projects: '**/*Test/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: CopyFiles@2
  condition: and(succeeded(), variables['publishArtifacts'])
  inputs:
    Contents: |
     **\*.nupkg
     **\*.symbols.nupkg
    TargetFolder: '$(Build.ArtifactStagingDirectory)'    

- task: PublishBuildArtifacts@1
  condition: and(succeeded(), variables['publishArtifacts'])
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '_Labradoratory.JsonPatch.Patchable'
    publishLocation: 'Container'